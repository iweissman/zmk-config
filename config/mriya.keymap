/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    macros {
        tochka: tochka {
            compatible = "zmk,behavior-macro";
            label = "TOCHKA";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp SPACE &sk LEFT_SHIFT>;
        };

        lgsw: lgsw {
            compatible = "zmk,behavior-macro";
            label = "LGSW";
            #binding-cells = <0>;
            bindings = <&sk LEFT_WIN &kp SPACE>;
        };

        pvu: pvu {
            compatible = "zmk,behavior-macro";
            label = "PVU";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp H &kp J &kp C &kp N &kp J &kp Q &kp G &kp F &kp H &kp J &kp K &kp M &kp N3 &kp N1>;
        };

        vu: vu {
            compatible = "zmk,behavior-macro";
            label = "VU";
            #binding-cells = <0>;
            bindings = <&kp V &kp T &kp B &kp N7 &kp N0 &kp N1 &kp N5 &kp N3 &kp N0 &kp N4 &kp N7>;
        };

        zap: zap {
            compatible = "zmk,behavior-macro";
            label = "ZAP";
            #binding-cells = <0>;
            bindings = <&kp LS(FSLH) &kp SPACE>;
        };

        pvdd: pvdd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(G) &kp H &kp J &kp C &kp N &kp J &kp Q &kp N3 &kp N1 &kp EXCL>;
            label = "PVDD";
        };

        klagonc_next: klagonc_next {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_wait_time 500>, <&kp LC(RIGHT) &kp LC(ENTER)>;

            label = "KLAGONC_NEXT";
        };

        test1: test1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_wait_time 1500>,
                <&kp S &kp D &kp F &kp S &kp D &kp F>,
                <&macro_tap_time 1500>,
                <&kp X &kp C &kp V &kp X &kp C &kp V>;

            label = "TEST1";
        };
    };

    behaviors {
        skmod: skmod {
            compatible = "zmk,behavior-hold-tap";
            label = "SKMOD";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&sk>;
        };

        lt_tonchka: lt_tonchka {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TONCHKA";
            bindings = <&lt>, <&tochka>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            flavor = "tap-preferred";
        };

        kp_zap: kp_zap {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_ZAP";
            bindings = <&kp>, <&zap>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        rus_h {
            bindings = <&kp LBKT>;
            key-positions = <31 32>;
            layers = <0>;
            timeout-ms = <25>;
        };

        rus_tvdrzn {
            bindings = <&kp RBKT>;
            key-positions = <43 44>;
            timeout-ms = <25>;
            layers = <0>;
        };

        rus_ee {
            bindings = <&kp APOS>;
            key-positions = <28 27>;
            timeout-ms = <25>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &mt TAB ESC                     &kp N1  &kp N2    &kp N3     &kp N4                  &kp N5         &kp NUMBER_6  &kp N7         &kp N8           &kp N9                  &kp N0    &test1
  &kp GRAVE                       &kp Q   &kp W     &kp E      &kp R                   &kp T          &kp Y         &kp U          &kp I            &kp O                   &kp P     &kp LBKT
  &skmod RIGHT_SHIFT RIGHT_SHIFT  &kp A   &kp S     &kp D      &kp F                   &kp G          &kp H         &kp J          &kp K            &kp L                   &kp SEMI  &skmod RIGHT_CONTROL LEFT_SHIFT
  &kp LALT                        &kp Z   &kp X     &kp C      &kp V                   &kp B          &kp N         &kp M          &kp COMMA        &kp DOT                 &kp FSLH  &mt RALT BSLH
                                          &kp LGUI  &lt 2 TAB  &kp_zap LEFT_CONTROL 0  &lt 1 SPACE    &lt 1 ENTER   &kp BACKSPACE  &lt_tonchka 2 0  &mt RGUI RIGHT_BRACKET
            >;
        };

        lower_layer {
            bindings = <
  &kp SLASH            &kp F1     &kp F2    &kp F3            &kp F4            &kp F5        &kp F6           &kp F7   &kp F8    &kp F9  &kp F10       &kp F11
  &kp UNDER            &kp CARET  &kp AMPS  &kp STAR          &kp LPAR          &kp RPAR      &kp KP_MULTIPLY  &kp N7   &kp N8    &kp N9  &kp KP_MINUS  &kp F12
  &mt LEFT_SHIFT PLUS  &kp MINUS  &kp EXCL  &kp LS(NUMBER_4)  &kp LS(NUMBER_6)  &kp LS(N7)    &kp KP_SLASH     &kp N4   &kp N5    &kp N6  &kp KP_PLUS   &mt RCTRL MINUS
  &mt LALT EQUAL       &trans     &kp HASH  &kp AT            &kp DLLR          &lgsw         &kp KP_DOT       &kp N1   &kp N2    &kp N3  &kp EQUAL     &trans
                                  &trans    &lt 3 TAB         &trans            &trans        &trans           &kp DEL  &lt 3 N0  &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans                &trans           &trans     &trans     &trans     &trans          &vu           &trans    &pvdd      &trans     &trans           &pvu
  &kp KP_NUM            &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS
  &mt LEFT_SHIFT EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
  &trans                &kp KP_DOT       &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N0       &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                         &trans     &trans     &trans     &lt 3 RET       &lt 3 ESC     &trans    &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
  &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
